---
import Layout from '../../layouts/Page.astro';
import { Container } from '@littlesticks/odyssey-theme-components';

const seo = {
	title: 'Learn Unity | Game Development Resources | Game Dev Club',
	description: 'A compiled list of unity resources.',
};
---

<Layout seo={seo}>
    <h1>Unity Curriculum</h1>
	<br>
	<h3>Lesson 1: <a href = "https://learn.unity.com/project/unit-1-driving-simulation">Introduction to Unity</a></h3>
	<h4>In this Unit, you will program a car moving side-to-side on a floating road, trying to avoid (or hit) obstacles in the way. In addition to becoming familiar with the Unity editor and workflow, you will learn how to create new C# scripts and do some simple programming. By the end of the Unit, you will be able to call basic functions, then declare and tweak new variables to modify the results of those functions. </h4>
	<br>
	
	<h3>Lesson 2: <a href = "https://learn.unity.com/project/unit-2-basic-gameplay">Basic Gameplay</a></h3>
	<h4>In this Unit, you will program a top-down game with the objective of throwing food to hungry animals - who are stampeding towards you - before they can run past you. In order to do this, you will become much more familiar with some of the most important programming and Unity concepts, including if-then statements, random value generation, arrays, collision detection, prefabs, and instantiation. In completing this Unit, you will learn how to program a basic game with the ability to launch projectiles and maneuver the player to keep the game alive. </h4>
	<br>
	
	<h3>Lesson 3: <a href = "https://learn.unity.com/project/unit-3-sound-and-effects">Sound and Effects</a></h3>
	<h4>In this Unit, you will program a fast-paced endless side-scrolling runner game where the player needs to time jumps over oncoming obstacles to avoid crashing. In creating this prototype, you will learn how to add music and sound effects, completely transforming the experience of your projects. You will also learn how to create dynamic endless repeating backgrounds, which are critical for any side-scrolling games. Finally, you will learn to incorporate particle effects like splatters and explosions, which make your games so much more satisfying to play.  </h4>
	<br>
	
	<h3>Lesson 4: <a href = "https://learn.unity.com/project/unit-4-gameplay-mechanics">Gameplay Mechanics</a></h3>
	<h4>In this Unit, you will program an arcade-style Sumo battle with the objective of knocking increasingly difficult waves of enemies off of a floating island, using power ups to help defeat them. In creating this prototype, you will learn how to implement new gameplay mechanics into your projects, which are new rules or systems that make the game more interesting to play. On one hand, you will learn to program a powerup, which give the player a temporary advantage. On the other hand, you will learn to program increasingly difficult enemy waves, which make survival more challenging for the player. A good balance of powerups and increasing difficulty make for a much more interesting gameplay experience.  </h4>
	<br>
	
	<h3>Lesson 5: <a href = "https://learn.unity.com/project/unit-5-user-interface">User Interface</a></h3>
	<h4>In this Unit, you will program a game to test the player’s reflexes, where the goal is to click and destroy objects randomly tossed in the air before they can fall off the screen. In creating this prototype, you will learn how to implement a User Interface - or UI - into your projects. You will add a title screen with a difficulty select menu that will control how challenging the gameplay is, you will add a score display that will track how many points the player has earned, and you will add a Game Over screen, which will allow the player to restart and try again. In learning these skills, you will be able to create a fully “playable” experience that the user can enjoy from start to finish without having to restart the application to try it again. </h4>
    
</Layout>